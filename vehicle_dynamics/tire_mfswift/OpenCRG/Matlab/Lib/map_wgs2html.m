function [file] = map_wgs2html(llh, file, opts)
% MAP_WGS2HTML MAP generate HTML file to show WGS84 data in browser
%   [FILE] = MAP_WGS2HTML(LLH, FILE, OPTS) generates html file to display
%   wgs84 positions as track in browser map using Google maps.
%
%   Inputs:
%   LLH     (n, 3) or (n, 2) array of points in GEOD system (WGS84 based)
%   FILE    opt. name of html file (default: 'wgs.html')
%   OPTS    opt. struct for method options
%   .title  string for browser title (default: 'Track Overview')
%   .header html code of page header (default: ...)
%   .height map height percentage (default: 85)
%   .footer html code of page footer (default: ...)
%   .tcolor string for track color (default: 'cc8000')
%   .topaci opacity of track polyline (default: 0.5)
%   .twidth width of track polyline (default: 5)
%   .beg_nm string for "mouse-over" hint at start marker (default: ...)
%   .beg_pu html code for "click" popup at start marker (default: ...)
%   .end_nm string for "mouse-over" hint at end marker (default: ...)
%   .end_pu html code for "click" popup at end marker (default: ...)
%
%   Outputs:
%   FILE    name of html file
%
%   Examples:
%   data = [48.786826,9.084312; 48.884134,9.18334];
%   map_wgs2html(data/180*pi, 'demo.html');
%   web('demo.html', '-browser')
%   generates demo.html in current directory and shows the Solitude
%   trigonometric base line.
%
%   See also MAP_INTRO.

%   Copyright 2012-2013 OpenCRG - Daimler AG - Jochen Rauh
%
%   Licensed under the Apache License, Version 2.0 (the "License");
%   you may not use this file except in compliance with the License.
%   You may obtain a copy of the License at
%
%       http://www.apache.org/licenses/LICENSE-2.0
%
%   Unless required by applicable law or agreed to in writing, software
%   distributed under the License is distributed on an "AS IS" BASIS,
%   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%   See the License for the specific language governing permissions and
%   limitations under the License.
%
%   More Information on OpenCRG open file formats and tools can be found at
%
%       http://www.opencrg.org
%
%   $Id: map_wgs2html.m,v 1.1 2013/08/06 10:09:26 tsn\hofstadrhmtvd Exp $

%% process required args 

% convert llh (rad) to wgs (deg)

wgs = llh(:,1:2)*180/pi;
np = size(wgs, 1);

%% handle optional args

% FILE

if nargin<2 || isempty(file)
    file = 'wgs.html';
end

% OPTS

if nargin<3 || isempty(opts)
    opts = struct;
end

if isfield(opts, 'title')
    title = opts.title;
else
    title = 'Track Overview Map';
end

if isfield(opts, 'header')
    header = opts.header;
else
    header = '<h1>Track Overview Map</h1>';
end

if isfield(opts, 'height')
    height = opts.height;
else
    height = 85;
end

if isfield(opts, 'footer')
    footer = opts.footer;
else
    footer = ['<address>generated by ' mfilename ' at ' datestr(now, 31) '</address>'];
end

if isfield(opts, 'tcolor')
    tcolor = opts.tcolor;
else
    tcolor = 'cc8000';
end

if isfield(opts, 'topaci')
    topaci = opts.topaci;
else
    topaci = 0.5;
end

if isfield(opts, 'twidth')
    twidth = opts.twidth;
else
    twidth = 5;
end

if isfield(opts, 'beg_nm')
    beg_nm = opts.beg_nm;
else
    beg_nm = 'Start';
end

if isfield(opts, 'beg_pu')
    beg_pu = opts.beg_pu;
else
    beg_pu = ['<h4>Start of Track:</h4>' ...
        '<table style=\"text-align:right\"><tbody>' ...
        '<tr><td>lat =</td><td>' num2str(wgs(1,1),'%.6f') '</td></tr>' ...
        '<tr><td>lon =</td><td>' num2str(wgs(1,2),'%.6f') '</td></tr>'];
    if size(wgs, 2) > 2
        beg_pu = [beg_pu '<tr><td>alt =</td><td>' num2str(wgs(1,3),'%.6f') '</td></tr>'];
    end
    beg_pu = [beg_pu '</tbody></table>'];
end

if isfield(opts, 'end_nm')
    end_nm = opts.end_nm;
else
    end_nm = 'End';
end
if isfield(opts, 'end_pu')
    end_pu = opts.end_pu;
else
    end_pu = ['<h4>End of Track:</h4>' ...
        '<table style=\"text-align:right\"><tbody>' ...
        '<tr><td>lat =</td><td>' num2str(wgs(end,1),'%.6f') '</td></tr>' ...
        '<tr><td>lon =</td><td>' num2str(wgs(end,2),'%.6f') '</td></tr>'];
    if size(wgs, 2) > 2
        end_pu = [end_pu '<tr><td>alt =</td><td>' num2str(wgs(end,3),'%.6f') '</td></tr>'];
    end
    end_pu = [end_pu '</tbody></table>'];
end


%% write html file

fid = fopen(file, 'w');

fprintf(fid, '<!DOCTYPE html>\n');
fprintf(fid, '<html>\n');
fprintf(fid, '  <head>\n');
fprintf(fid, '    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />\n');
fprintf(fid, '    <style type="text/css">\n');
fprintf(fid, '      html { height: 100%% } \n');
fprintf(fid, '      body { height: 100%%; margin: 0px; padding: 0px }\n');
fprintf(fid, '      #map_canvas { height: 100%% }\n');
fprintf(fid, '    </style>\n');
fprintf(fid, '    <title>%s</title>\n', title);
fprintf(fid, '    <script type="text/javascript"\n');
fprintf(fid, '            src="https://maps.google.com/maps/api/js?sensor=false">\n');
fprintf(fid, '    </script>\n');
fprintf(fid, '    <script type="text/javascript">\n');
fprintf(fid, '      function initialize() {\n');
fprintf(fid, '        var center = new google.maps.LatLng(%.6f,%.6f);\n', mean(wgs(:,1)),mean(wgs(:,2)));
fprintf(fid, '        var start  = new google.maps.LatLng(%.6f,%.6f);\n', wgs(1  ,1), wgs(  1,2));
fprintf(fid, '        var end    = new google.maps.LatLng(%.6f,%.6f);\n', wgs(end,1), wgs(end,2));
fprintf(fid, '        var myOptions = {\n');
fprintf(fid, '          zoom: 13,\n');
fprintf(fid, '          center: center,\n');
fprintf(fid, '          mapTypeId: google.maps.MapTypeId.ROADMAP };\n');
fprintf(fid, '        var map = new google.maps.Map(document.getElementById("map_canvas"),\n');
fprintf(fid, '          myOptions);\n');

fprintf(fid, '        var marker_start = new google.maps.Marker({\n');
fprintf(fid, '          position: start,\n');
fprintf(fid, '          map: map,\n');
fprintf(fid, '          title: "%s",\n', beg_nm);
fprintf(fid, '          icon: "http://maps.google.com/mapfiles/dd-start.png"\n');
fprintf(fid, '          });\n');
fprintf(fid, '        var beg_pu = \n');
fprintf(fid, '          "%s"\n', beg_pu);
fprintf(fid, '        var infowindow_start = new google.maps.InfoWindow({\n');
fprintf(fid, '          content: beg_pu\n');
fprintf(fid, '          });\n');
fprintf(fid, '        google.maps.event.addListener(marker_start, "click", function() {\n');
fprintf(fid, '          infowindow_start.open(map,marker_start);\n');
fprintf(fid, '          });\n');

fprintf(fid, '        var marker_end = new google.maps.Marker({\n');
fprintf(fid, '          position: end,\n');
fprintf(fid, '          map: map,\n');
fprintf(fid, '          title: "%s",\n', end_nm);
fprintf(fid, '          icon: "http://maps.google.com/mapfiles/dd-end.png"\n');
fprintf(fid, '          });\n');
fprintf(fid, '        var end_pu = \n');
fprintf(fid, '          "%s"\n', end_pu);
fprintf(fid, '        var infowindow_end = new google.maps.InfoWindow({\n');
fprintf(fid, '          content: end_pu\n');
fprintf(fid, '          });\n');
fprintf(fid, '        google.maps.event.addListener(marker_end, "click", function() {\n');
fprintf(fid, '          infowindow_end.open(map,marker_end);\n');
fprintf(fid, '          });\n');

fprintf(fid, '        var polyline = [\n');
for i = 1:np-1
    fprintf(fid, '          new google.maps.LatLng(%.6f,%.6f),\n', wgs(i,1), wgs(i,2));
end
fprintf(fid, '          new google.maps.LatLng(%.6f,%.6f)];\n', wgs(np,1), wgs(np,2));

fprintf(fid, '        var track = new google.maps.Polyline({\n');
fprintf(fid, '          path: polyline,\n');
fprintf(fid, '          strokeColor: "#%s",\n', tcolor);
fprintf(fid, '          strokeOpacity: %f,\n', topaci);
fprintf(fid, '          strokeWeight: %d\n', twidth);
fprintf(fid, '          });\n');

fprintf(fid, '        track.setMap(map);\n');
fprintf(fid, '        var bounds = new google.maps.LatLngBounds ();\n');
fprintf(fid, '        for (var i = 0, LtLgLen = polyline.length; i < LtLgLen; i++) {\n');
fprintf(fid, '          bounds.extend (polyline[i]);\n');
fprintf(fid, '          }\n');
fprintf(fid, '        map.fitBounds (bounds);\n');
fprintf(fid, '      }\n');
fprintf(fid, '    </script>\n');
fprintf(fid, '  </head>\n');

fprintf(fid, '  <body style="height:95%%; margin:0; font-family:sans-serif" onload="initialize()" onunload="GUnload()">\n');
fprintf(fid, '    %s\n', header);
fprintf(fid, '    <div id="map_canvas" style="width: 100%%; height: %d%%"></div>\n', height);
fprintf(fid, '    %s\n', footer);
fprintf(fid, '  </body>\n');
fprintf(fid, '</html>\n');

fclose(fid);

end
