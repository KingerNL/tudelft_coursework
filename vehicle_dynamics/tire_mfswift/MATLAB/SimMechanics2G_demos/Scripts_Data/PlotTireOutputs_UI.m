function varargout = PlotTireOutputs_UI(varargin)
% PLOTTIREOUTPUTS_UI MATLAB code for PlotTireOutputs_UI.fig
%      PLOTTIREOUTPUTS_UI, by itself, creates a new PLOTTIREOUTPUTS_UI or raises the existing
%      singleton*.
%
%      H = PLOTTIREOUTPUTS_UI returns the handle to a new PLOTTIREOUTPUTS_UI or the handle to
%      the existing singleton*.
%
%      PLOTTIREOUTPUTS_UI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in PLOTTIREOUTPUTS_UI.M with the given input arguments.
%
%      PLOTTIREOUTPUTS_UI('Property','Value',...) creates a new PLOTTIREOUTPUTS_UI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before PlotTireOutputs_UI_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to PlotTireOutputs_UI_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help PlotTireOutputs_UI

% Last Modified by GUIDE v2.5 22-Oct-2013 20:40:46

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @PlotTireOutputs_UI_OpeningFcn, ...
                   'gui_OutputFcn',  @PlotTireOutputs_UI_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

% --- Executes just before PlotTireOutputs_UI is made visible.
function PlotTireOutputs_UI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to PlotTireOutputs_UI (see VARARGIN)

% Choose default command line output for PlotTireOutputs_UI
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% This sets up the initial plot - only do when we are invisible
% so window can get raised using PlotTireOutputs_UI.
% UIWAIT makes PlotTireOutputs_UI wait for user response (see UIRESUME)
% uiwait(handles.figure1);
popup_sel_string = get(handles.popupmenu1, 'String');
popup_sel_choice = popup_sel_string(get(handles.popupmenu1, 'Value'));
Label_Title = {'Fx(N)','Longitudinal Force';...
               'Fy(N)','Lateral Force';...
               'Fz(N)','Vertical Force';...
               'Mx(Nm)','Overturning Moment';...
               'My(Nm)','Rolling Resistance';...
               'Mz(Nm)','Self-Aligning Moment';...
               'Long Slip','Longitudinal Slip';...
               'Slideslip(rad)','Sideslip Angle';...
               'Inc. Angle(rad)','Inclination Angle';...
               'Turnslip(1/m)','Turn Slip';...
               'Vx(m/s)','Contact Center Vx';...
               'x','x';...
               'Roll rad(m)','Rolling Radius';...
               'Tdefl(m)','Tire Deflection';...
               'CLength(m)','Contact Length';...
               'PneuTr(m)','Pneumatic Trail';...
               'MuLong','Longitudinal mu';...
               'MuLat','Lateral mu';...
               'RelaxLong(m)','Long. Relaxation Length';...
               'RelaxLat(m)','Lat. Relaxation Length';...
               'WSVelLong(m/s)','Long. Whl Slip Vel';...
               'WSVelLat(m/s)','Lateral. Whl Slip Vel';...
               'ComprVel(m/s)','Compression Vel.';...
               'YawVel(m/s)','Yaw Velocity';...
               'x','x';...
               'x','x';...
               'x','x';...
               'Dist(m)','Travelled Distance';...
               'x','x';...
               'x','x';...
               'xPos(m)','Contact Point x';...
               'yPos(m)','Contact Point y';...
               'zPos(m)','Contact Point z';...
               'IRNx','Road Normal x';...
               'IRNy','Road Normal y';...
               'IRNz','Road Normal z';...
               'Height(m)','Road Height';...
               'Slope(rad)','Road Slope';...
               'Curv(1/m)','Road Curvature';...
               'Bank(rad)','Road Banking'};
if(evalin('base',['exist(''varinf1'')']))
	Plot_Tire_Outputs(find(strcmp(deblank(popup_sel_choice),Label_Title(:,2))));
end



% --- Outputs from this function are returned to the command line.
function varargout = PlotTireOutputs_UI_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;

% --------------------------------------------------------------------
function FileMenu_Callback(hObject, eventdata, handles)
% hObject    handle to FileMenu (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OpenMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to OpenMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
file = uigetfile('*.fig');
if ~isequal(file, 0)
    open(file);
end

% --------------------------------------------------------------------
function PrintMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to PrintMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
printdlg(handles.figure1)

% --------------------------------------------------------------------
function CloseMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to CloseMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
selection = questdlg(['Close ' get(handles.figure1,'Name') '?'],...
                     ['Close ' get(handles.figure1,'Name') '...'],...
                     'Yes','No','Yes');
if strcmp(selection,'No')
    return;
end

delete(handles.figure1)


% --- Executes on selection change in popupmenu1.
function popupmenu1_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns popupmenu1 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu1

popup_sel_string = get(handles.popupmenu1, 'String');
popup_sel_choice = popup_sel_string(get(handles.popupmenu1, 'Value'));
Label_Title = {'Fx(N)','Longitudinal Force';...
               'Fy(N)','Lateral Force';...
               'Fz(N)','Vertical Force';...
               'Mx(Nm)','Overturning Moment';...
               'My(Nm)','Rolling Resistance';...
               'Mz(Nm)','Self-Aligning Moment';...
               'Long Slip','Longitudinal Slip';...
               'Slideslip(rad)','Sideslip Angle';...
               'Inc. Angle(rad)','Inclination Angle';...
               'Turnslip(1/m)','Turn Slip';...
               'Vx(m/s)','Contact Center Vx';...
               'x','x';...
               'Roll rad(m)','Rolling Radius';...
               'Tdefl(m)','Tire Deflection';...
               'CLength(m)','Contact Length';...
               'PneuTr(m)','Pneumatic Trail';...
               'MuLong','Longitudinal mu';...
               'MuLat','Lateral mu';...
               'RelaxLong(m)','Long. Relaxation Length';...
               'RelaxLat(m)','Lat. Relaxation Length';...
               'WSVelLong(m/s)','Long. Whl Slip Vel';...
               'WSVelLat(m/s)','Lateral. Whl Slip Vel';...
               'ComprVel(m/s)','Compression Vel.';...
               'YawVel(m/s)','Yaw Velocity';...
               'x','x';...
               'x','x';...
               'x','x';...
               'Dist(m)','Travelled Distance';...
               'x','x';...
               'x','x';...
               'xPos(m)','Contact Point x';...
               'yPos(m)','Contact Point y';...
               'zPos(m)','Contact Point z';...
               'IRNx','Road Normal x';...
               'IRNy','Road Normal y';...
               'IRNz','Road Normal z';...
               'Height(m)','Road Height';...
               'Slope(rad)','Road Slope';...
               'Curv(1/m)','Road Curvature';...
               'Bank(rad)','Road Banking'};
if(evalin('base',['exist(''varinf1'')']))
	Plot_Tire_Outputs(find(strcmp(deblank(popup_sel_choice),Label_Title(:,2))));
end


% --- Executes during object creation, after setting all properties.
function popupmenu1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
     set(hObject,'BackgroundColor','white');
end

set(hObject, 'String', {'Longitudinal Force','Lateral Force','Vertical Force','Overturning Moment','Rolling Resistance','Self-Aligning Moment','Longitudinal Slip','Sideslip Angle','Inclination Angle','Turn Slip','Contact Center Vx','Rolling Radius','Tire Deflection','Contact Length','Pneumatic Trail','Longitudinal mu','Lateral mu','Long. Relaxation Length','Lat. Relaxation Length','Long. Whl Slip Vel','Lateral. Whl Slip Vel','Compression Vel.','Yaw Velocity','Travelled Distance','Contact Point x','Contact Point y','Contact Point z','Road Normal x','Road Normal y','Road Normal z','Road Height','Road Slope','Road Curvature','Road Banking'});
